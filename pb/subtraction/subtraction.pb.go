// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/subtraction.proto

/*
Package subtraction is a generated protocol buffer package.

It is generated from these files:
	proto/subtraction.proto

It has these top-level messages:
	SubRequest
	SubResponse
*/
package subtraction

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SubRequest struct {
	A int64 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B int64 `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
}

func (m *SubRequest) Reset()                    { *m = SubRequest{} }
func (m *SubRequest) String() string            { return proto.CompactTextString(m) }
func (*SubRequest) ProtoMessage()               {}
func (*SubRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SubRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *SubRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type SubResponse struct {
	Rez int64 `protobuf:"varint,1,opt,name=rez" json:"rez,omitempty"`
}

func (m *SubResponse) Reset()                    { *m = SubResponse{} }
func (m *SubResponse) String() string            { return proto.CompactTextString(m) }
func (*SubResponse) ProtoMessage()               {}
func (*SubResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SubResponse) GetRez() int64 {
	if m != nil {
		return m.Rez
	}
	return 0
}

func init() {
	proto.RegisterType((*SubRequest)(nil), "subtraction.SubRequest")
	proto.RegisterType((*SubResponse)(nil), "subtraction.SubResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SubService service

type SubServiceClient interface {
	Sub(ctx context.Context, in *SubRequest, opts ...grpc.CallOption) (*SubResponse, error)
}

type subServiceClient struct {
	cc *grpc.ClientConn
}

func NewSubServiceClient(cc *grpc.ClientConn) SubServiceClient {
	return &subServiceClient{cc}
}

func (c *subServiceClient) Sub(ctx context.Context, in *SubRequest, opts ...grpc.CallOption) (*SubResponse, error) {
	out := new(SubResponse)
	err := grpc.Invoke(ctx, "/subtraction.SubService/Sub", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SubService service

type SubServiceServer interface {
	Sub(context.Context, *SubRequest) (*SubResponse, error)
}

func RegisterSubServiceServer(s *grpc.Server, srv SubServiceServer) {
	s.RegisterService(&_SubService_serviceDesc, srv)
}

func _SubService_Sub_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubServiceServer).Sub(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/subtraction.SubService/Sub",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubServiceServer).Sub(ctx, req.(*SubRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SubService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "subtraction.SubService",
	HandlerType: (*SubServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sub",
			Handler:    _SubService_Sub_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/subtraction.proto",
}

func init() { proto.RegisterFile("proto/subtraction.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x2e, 0x4d, 0x2a, 0x29, 0x4a, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0xd3, 0x03, 0x8b,
	0x08, 0x71, 0x23, 0x09, 0x29, 0x69, 0x70, 0x71, 0x05, 0x97, 0x26, 0x05, 0xa5, 0x16, 0x96, 0xa6,
	0x16, 0x97, 0x08, 0xf1, 0x70, 0x31, 0x26, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0x31, 0x26,
	0x82, 0x78, 0x49, 0x12, 0x4c, 0x10, 0x5e, 0x92, 0x92, 0x3c, 0x17, 0x37, 0x58, 0x65, 0x71, 0x41,
	0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x00, 0x17, 0x73, 0x51, 0x6a, 0x15, 0x54, 0x31, 0x88, 0x69, 0xe4,
	0x01, 0x36, 0x2a, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x8a, 0x8b, 0x39, 0xb8, 0x34,
	0x49, 0x48, 0x5c, 0x0f, 0xd9, 0x01, 0x08, 0xab, 0xa4, 0x24, 0x30, 0x25, 0x20, 0x26, 0x2b, 0x31,
	0x38, 0x09, 0x44, 0xf1, 0x15, 0x24, 0x21, 0xbb, 0x3c, 0x89, 0x0d, 0xec, 0x74, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xd8, 0xc5, 0x71, 0xb7, 0xd5, 0x00, 0x00, 0x00,
}
