// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/division.proto

/*
Package division is a generated protocol buffer package.

It is generated from these files:
	proto/division.proto

It has these top-level messages:
	DivRequest
	DivResponse
*/
package division

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DivRequest struct {
	A int64 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B int64 `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
}

func (m *DivRequest) Reset()                    { *m = DivRequest{} }
func (m *DivRequest) String() string            { return proto.CompactTextString(m) }
func (*DivRequest) ProtoMessage()               {}
func (*DivRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DivRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *DivRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type DivResponse struct {
	Rez int64 `protobuf:"varint,1,opt,name=rez" json:"rez,omitempty"`
}

func (m *DivResponse) Reset()                    { *m = DivResponse{} }
func (m *DivResponse) String() string            { return proto.CompactTextString(m) }
func (*DivResponse) ProtoMessage()               {}
func (*DivResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DivResponse) GetRez() int64 {
	if m != nil {
		return m.Rez
	}
	return 0
}

func init() {
	proto.RegisterType((*DivRequest)(nil), "division.DivRequest")
	proto.RegisterType((*DivResponse)(nil), "division.DivResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DivisionService service

type DivisionServiceClient interface {
	Div(ctx context.Context, in *DivRequest, opts ...grpc.CallOption) (*DivResponse, error)
}

type divisionServiceClient struct {
	cc *grpc.ClientConn
}

func NewDivisionServiceClient(cc *grpc.ClientConn) DivisionServiceClient {
	return &divisionServiceClient{cc}
}

func (c *divisionServiceClient) Div(ctx context.Context, in *DivRequest, opts ...grpc.CallOption) (*DivResponse, error) {
	out := new(DivResponse)
	err := grpc.Invoke(ctx, "/division.DivisionService/Div", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DivisionService service

type DivisionServiceServer interface {
	Div(context.Context, *DivRequest) (*DivResponse, error)
}

func RegisterDivisionServiceServer(s *grpc.Server, srv DivisionServiceServer) {
	s.RegisterService(&_DivisionService_serviceDesc, srv)
}

func _DivisionService_Div_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DivRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DivisionServiceServer).Div(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/division.DivisionService/Div",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DivisionServiceServer).Div(ctx, req.(*DivRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DivisionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "division.DivisionService",
	HandlerType: (*DivisionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Div",
			Handler:    _DivisionService_Div_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/division.proto",
}

func init() { proto.RegisterFile("proto/division.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xc9, 0x2c, 0xcb, 0x2c, 0xce, 0xcc, 0xcf, 0xd3, 0x03, 0x73, 0x85, 0x38, 0x60,
	0x7c, 0x25, 0x0d, 0x2e, 0x2e, 0x97, 0xcc, 0xb2, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21,
	0x1e, 0x2e, 0xc6, 0x44, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0xc6, 0x44, 0x10, 0x2f, 0x49,
	0x82, 0x09, 0xc2, 0x4b, 0x52, 0x92, 0xe7, 0xe2, 0x06, 0xab, 0x2c, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e,
	0x15, 0x12, 0xe0, 0x62, 0x2e, 0x4a, 0xad, 0x82, 0x2a, 0x06, 0x31, 0x8d, 0xdc, 0xb9, 0xf8, 0x5d,
	0xa0, 0xc6, 0x06, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0x99, 0x70, 0x31, 0xbb, 0x64, 0x96,
	0x09, 0x89, 0xe8, 0xc1, 0xed, 0x47, 0x58, 0x26, 0x25, 0x8a, 0x26, 0x0a, 0x31, 0x58, 0x89, 0xc1,
	0x89, 0x37, 0x8a, 0xbb, 0x20, 0x09, 0xee, 0xe4, 0x24, 0x36, 0xb0, 0x9b, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xf3, 0xc8, 0xf4, 0xab, 0xcb, 0x00, 0x00, 0x00,
}
